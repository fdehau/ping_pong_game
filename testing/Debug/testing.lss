
testing.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000ba  00800100  00000c1c  00000cb0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000c1c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000c  008001ba  008001ba  00000d6a  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000d6a  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000000c0  00000000  00000000  00000dc6  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000a7d  00000000  00000000  00000e86  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000618  00000000  00000000  00001903  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000547  00000000  00000000  00001f1b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000190  00000000  00000000  00002464  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000419  00000000  00000000  000025f4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000520  00000000  00000000  00002a0d  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000080  00000000  00000000  00002f2d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	11 e0       	ldi	r17, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	ec e1       	ldi	r30, 0x1C	; 28
  84:	fc e0       	ldi	r31, 0x0C	; 12
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	aa 3b       	cpi	r26, 0xBA	; 186
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	21 e0       	ldi	r18, 0x01	; 1
  94:	aa eb       	ldi	r26, 0xBA	; 186
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	a6 3c       	cpi	r26, 0xC6	; 198
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 4c 01 	call	0x298	; 0x298 <main>
  a6:	0c 94 0c 06 	jmp	0xc18	; 0xc18 <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <ADC_read>:
#include "ADC_driver.h"

uint8_t ADC_read(enum channel channel)
{
	volatile char* start_mem = (char *) 0x1400;
	*start_mem = channel;
  ae:	80 93 00 14 	sts	0x1400, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  b2:	81 e4       	ldi	r24, 0x41	; 65
  b4:	8a 95       	dec	r24
  b6:	f1 f7       	brne	.-4      	; 0xb4 <ADC_read+0x6>
  b8:	00 c0       	rjmp	.+0      	; 0xba <ADC_read+0xc>
	_delay_us(40);
	return *start_mem;
  ba:	80 91 00 14 	lds	r24, 0x1400
  be:	08 95       	ret

000000c0 <USART_send>:
  c0:	5d 9b       	sbis	0x0b, 5	; 11
  c2:	fe cf       	rjmp	.-4      	; 0xc0 <USART_send>
  c4:	8c b9       	out	0x0c, r24	; 12
  c6:	81 e0       	ldi	r24, 0x01	; 1
  c8:	90 e0       	ldi	r25, 0x00	; 0
  ca:	08 95       	ret

000000cc <USART_receive>:
  cc:	5f 9b       	sbis	0x0b, 7	; 11
  ce:	fe cf       	rjmp	.-4      	; 0xcc <USART_receive>
  d0:	8c b1       	in	r24, 0x0c	; 12
  d2:	90 e0       	ldi	r25, 0x00	; 0
  d4:	08 95       	ret

000000d6 <USART_init>:
  d6:	10 bc       	out	0x20, r1	; 32
  d8:	8f e1       	ldi	r24, 0x1F	; 31
  da:	89 b9       	out	0x09, r24	; 9
  dc:	8a b1       	in	r24, 0x0a	; 10
  de:	88 61       	ori	r24, 0x18	; 24
  e0:	8a b9       	out	0x0a, r24	; 10
  e2:	80 b5       	in	r24, 0x20	; 32
  e4:	86 68       	ori	r24, 0x86	; 134
  e6:	80 bd       	out	0x20, r24	; 32
  e8:	66 e6       	ldi	r22, 0x66	; 102
  ea:	70 e0       	ldi	r23, 0x00	; 0
  ec:	80 e6       	ldi	r24, 0x60	; 96
  ee:	90 e0       	ldi	r25, 0x00	; 0
  f0:	0e 94 db 02 	call	0x5b6	; 0x5b6 <fdevopen>
  f4:	08 95       	ret

000000f6 <JOY_calibrate>:
	JOY_calibrate();
}
	
	
void JOY_calibrate(){
	JOY_X_INIT = ADC_read(JOY_X);
  f6:	87 e0       	ldi	r24, 0x07	; 7
  f8:	0e 94 57 00 	call	0xae	; 0xae <ADC_read>
  fc:	80 93 ba 01 	sts	0x01BA, r24
	JOY_Y_INIT = ADC_read(JOY_Y);	
 100:	86 e0       	ldi	r24, 0x06	; 6
 102:	0e 94 57 00 	call	0xae	; 0xae <ADC_read>
 106:	80 93 bb 01 	sts	0x01BB, r24
 10a:	08 95       	ret

0000010c <JOY_init>:


#include "JOYSTICK_driver.h"

void JOY_init(){
	MCUCR |= (1 << SRE);
 10c:	85 b7       	in	r24, 0x35	; 53
 10e:	80 68       	ori	r24, 0x80	; 128
 110:	85 bf       	out	0x35, r24	; 53
	JOY_calibrate();
 112:	0e 94 7b 00 	call	0xf6	; 0xf6 <JOY_calibrate>
 116:	08 95       	ret

00000118 <JOY_getButton>:
	JOY_Y_INIT = ADC_read(JOY_Y);	
}
	

uint8_t JOY_getButton(enum JOY_button button){
	switch(button)
 118:	82 30       	cpi	r24, 0x02	; 2
 11a:	69 f0       	breq	.+26     	; 0x136 <JOY_getButton+0x1e>
 11c:	28 f4       	brcc	.+10     	; 0x128 <JOY_getButton+0x10>
 11e:	88 23       	and	r24, r24
 120:	79 f0       	breq	.+30     	; 0x140 <JOY_getButton+0x28>
 122:	81 30       	cpi	r24, 0x01	; 1
 124:	21 f0       	breq	.+8      	; 0x12e <JOY_getButton+0x16>
 126:	0b c0       	rjmp	.+22     	; 0x13e <JOY_getButton+0x26>
 128:	85 30       	cpi	r24, 0x05	; 5
 12a:	48 f4       	brcc	.+18     	; 0x13e <JOY_getButton+0x26>
 12c:	09 c0       	rjmp	.+18     	; 0x140 <JOY_getButton+0x28>
	{
		case JOY_BUTTON:
			return 0;
		case JOY_LEFT_SLIDER:
			return ADC_read(LEFT_SLIDER);
 12e:	84 e0       	ldi	r24, 0x04	; 4
 130:	0e 94 57 00 	call	0xae	; 0xae <ADC_read>
 134:	08 95       	ret
		case JOY_RIGHT_SLIDER:
			return ADC_read(RIGHT_SLIDER);
 136:	85 e0       	ldi	r24, 0x05	; 5
 138:	0e 94 57 00 	call	0xae	; 0xae <ADC_read>
 13c:	08 95       	ret
 13e:	08 95       	ret

uint8_t JOY_getButton(enum JOY_button button){
	switch(button)
	{
		case JOY_BUTTON:
			return 0;
 140:	80 e0       	ldi	r24, 0x00	; 0
		case JOY_LEFT_BUTTON:
			return 0;
		case JOY_RIGHT_BUTTON:
			return 0;
	}
}
 142:	08 95       	ret

00000144 <JOY_getPosition>:

	
	
JOY_position_t JOY_getPosition(){
 144:	ff 92       	push	r15
 146:	0f 93       	push	r16
 148:	1f 93       	push	r17
 14a:	cf 93       	push	r28
 14c:	df 93       	push	r29
	JOY_position_t position;
	uint8_t JOY_X_value = ADC_read(JOY_X);
 14e:	87 e0       	ldi	r24, 0x07	; 7
 150:	0e 94 57 00 	call	0xae	; 0xae <ADC_read>
 154:	c8 2f       	mov	r28, r24
	uint8_t JOY_Y_value = ADC_read(JOY_Y);
 156:	86 e0       	ldi	r24, 0x06	; 6
 158:	0e 94 57 00 	call	0xae	; 0xae <ADC_read>
 15c:	48 2f       	mov	r20, r24
	position.X = (JOY_X_value - JOY_X_INIT) * 100 / (255 - JOY_X_INIT) ;
 15e:	20 91 ba 01 	lds	r18, 0x01BA
 162:	30 e0       	ldi	r19, 0x00	; 0
	position.Y = (JOY_Y_value - JOY_Y_INIT) * 100 / (255 - JOY_Y_INIT) ;
 164:	e0 91 bb 01 	lds	r30, 0x01BB
 168:	f0 e0       	ldi	r31, 0x00	; 0
	
JOY_position_t JOY_getPosition(){
	JOY_position_t position;
	uint8_t JOY_X_value = ADC_read(JOY_X);
	uint8_t JOY_Y_value = ADC_read(JOY_Y);
	position.X = (JOY_X_value - JOY_X_INIT) * 100 / (255 - JOY_X_INIT) ;
 16a:	6c 2f       	mov	r22, r28
 16c:	70 e0       	ldi	r23, 0x00	; 0
 16e:	62 1b       	sub	r22, r18
 170:	73 0b       	sbc	r23, r19
 172:	0f 2e       	mov	r0, r31
 174:	f4 e6       	ldi	r31, 0x64	; 100
 176:	ff 2e       	mov	r15, r31
 178:	f0 2d       	mov	r31, r0
 17a:	f6 9e       	mul	r15, r22
 17c:	c0 01       	movw	r24, r0
 17e:	f7 9e       	mul	r15, r23
 180:	90 0d       	add	r25, r0
 182:	11 24       	eor	r1, r1
 184:	cf ef       	ldi	r28, 0xFF	; 255
 186:	d0 e0       	ldi	r29, 0x00	; 0
 188:	be 01       	movw	r22, r28
 18a:	62 1b       	sub	r22, r18
 18c:	73 0b       	sbc	r23, r19
 18e:	0e 94 8c 01 	call	0x318	; 0x318 <__divmodhi4>
	position.Y = (JOY_Y_value - JOY_Y_INIT) * 100 / (255 - JOY_Y_INIT) ;
	return position;
 192:	8b 01       	movw	r16, r22
JOY_position_t JOY_getPosition(){
	JOY_position_t position;
	uint8_t JOY_X_value = ADC_read(JOY_X);
	uint8_t JOY_Y_value = ADC_read(JOY_Y);
	position.X = (JOY_X_value - JOY_X_INIT) * 100 / (255 - JOY_X_INIT) ;
	position.Y = (JOY_Y_value - JOY_Y_INIT) * 100 / (255 - JOY_Y_INIT) ;
 194:	50 e0       	ldi	r21, 0x00	; 0
 196:	4e 1b       	sub	r20, r30
 198:	5f 0b       	sbc	r21, r31
 19a:	f4 9e       	mul	r15, r20
 19c:	c0 01       	movw	r24, r0
 19e:	f5 9e       	mul	r15, r21
 1a0:	90 0d       	add	r25, r0
 1a2:	11 24       	eor	r1, r1
 1a4:	be 01       	movw	r22, r28
 1a6:	6e 1b       	sub	r22, r30
 1a8:	7f 0b       	sbc	r23, r31
	return position;
 1aa:	0e 94 8c 01 	call	0x318	; 0x318 <__divmodhi4>
 1ae:	9b 01       	movw	r18, r22
}
 1b0:	c9 01       	movw	r24, r18
 1b2:	b8 01       	movw	r22, r16
 1b4:	df 91       	pop	r29
 1b6:	cf 91       	pop	r28
 1b8:	1f 91       	pop	r17
 1ba:	0f 91       	pop	r16
 1bc:	ff 90       	pop	r15
 1be:	08 95       	ret

000001c0 <JOY_getDirection>:
	
	
JOY_direction_t JOY_getDirection(){
	
	JOY_position_t position = JOY_getPosition();
 1c0:	0e 94 a2 00 	call	0x144	; 0x144 <JOY_getPosition>
 1c4:	dc 01       	movw	r26, r24
	int max_value = abs(position.X) > abs(position.Y) ? abs(position.X) : abs(position.Y);
 1c6:	ac 01       	movw	r20, r24
 1c8:	99 23       	and	r25, r25
 1ca:	24 f4       	brge	.+8      	; 0x1d4 <JOY_getDirection+0x14>
 1cc:	44 27       	eor	r20, r20
 1ce:	55 27       	eor	r21, r21
 1d0:	48 1b       	sub	r20, r24
 1d2:	59 0b       	sbc	r21, r25
 1d4:	26 2f       	mov	r18, r22
 1d6:	37 2f       	mov	r19, r23
 1d8:	33 23       	and	r19, r19
 1da:	1c f4       	brge	.+6      	; 0x1e2 <JOY_getDirection+0x22>
 1dc:	31 95       	neg	r19
 1de:	21 95       	neg	r18
 1e0:	31 09       	sbc	r19, r1
 1e2:	f9 01       	movw	r30, r18
 1e4:	24 17       	cp	r18, r20
 1e6:	35 07       	cpc	r19, r21
 1e8:	0c f4       	brge	.+2      	; 0x1ec <JOY_getDirection+0x2c>
 1ea:	9a 01       	movw	r18, r20
	if (max_value < JOY_THRESHOLD)
 1ec:	24 31       	cpi	r18, 0x14	; 20
 1ee:	31 05       	cpc	r19, r1
 1f0:	74 f0       	brlt	.+28     	; 0x20e <JOY_getDirection+0x4e>
		return NEUTRAL;
	if (abs(position.X) > abs(position.Y))
 1f2:	4e 17       	cp	r20, r30
 1f4:	5f 07       	cpc	r21, r31
 1f6:	34 f4       	brge	.+12     	; 0x204 <JOY_getDirection+0x44>
		return position.X < 0 ? LEFT : RIGHT;
 1f8:	87 2f       	mov	r24, r23
 1fa:	80 95       	com	r24
 1fc:	88 1f       	adc	r24, r24
 1fe:	88 27       	eor	r24, r24
 200:	88 1f       	adc	r24, r24
 202:	08 95       	ret
	else
		return position.Y > 0 ? UP : DOWN;
 204:	1a 16       	cp	r1, r26
 206:	1b 06       	cpc	r1, r27
 208:	24 f4       	brge	.+8      	; 0x212 <JOY_getDirection+0x52>
 20a:	82 e0       	ldi	r24, 0x02	; 2
 20c:	08 95       	ret
JOY_direction_t JOY_getDirection(){
	
	JOY_position_t position = JOY_getPosition();
	int max_value = abs(position.X) > abs(position.Y) ? abs(position.X) : abs(position.Y);
	if (max_value < JOY_THRESHOLD)
		return NEUTRAL;
 20e:	84 e0       	ldi	r24, 0x04	; 4
 210:	08 95       	ret
	if (abs(position.X) > abs(position.Y))
		return position.X < 0 ? LEFT : RIGHT;
	else
		return position.Y > 0 ? UP : DOWN;
 212:	83 e0       	ldi	r24, 0x03	; 3
}
 214:	08 95       	ret

00000216 <direction_to_string>:

char* direction_to_string(JOY_direction_t direction){
 216:	cf 93       	push	r28
 218:	c8 2f       	mov	r28, r24
	char* string = malloc(sizeof(char)*10);
 21a:	8a e0       	ldi	r24, 0x0A	; 10
 21c:	90 e0       	ldi	r25, 0x00	; 0
 21e:	0e 94 b4 01 	call	0x368	; 0x368 <malloc>
	switch(direction)
 222:	c2 30       	cpi	r28, 0x02	; 2
 224:	59 f0       	breq	.+22     	; 0x23c <direction_to_string+0x26>
 226:	28 f4       	brcc	.+10     	; 0x232 <direction_to_string+0x1c>
 228:	cc 23       	and	r28, r28
 22a:	19 f1       	breq	.+70     	; 0x272 <direction_to_string+0x5c>
 22c:	c1 30       	cpi	r28, 0x01	; 1
 22e:	c1 f0       	breq	.+48     	; 0x260 <direction_to_string+0x4a>
 230:	31 c0       	rjmp	.+98     	; 0x294 <direction_to_string+0x7e>
 232:	c3 30       	cpi	r28, 0x03	; 3
 234:	61 f0       	breq	.+24     	; 0x24e <direction_to_string+0x38>
 236:	c4 30       	cpi	r28, 0x04	; 4
 238:	29 f1       	breq	.+74     	; 0x284 <direction_to_string+0x6e>
 23a:	2c c0       	rjmp	.+88     	; 0x294 <direction_to_string+0x7e>
	{
		case UP:
			memcpy(string, "Up", 10);
 23c:	2a e0       	ldi	r18, 0x0A	; 10
 23e:	e6 e0       	ldi	r30, 0x06	; 6
 240:	f1 e0       	ldi	r31, 0x01	; 1
 242:	dc 01       	movw	r26, r24
 244:	01 90       	ld	r0, Z+
 246:	0d 92       	st	X+, r0
 248:	2a 95       	dec	r18
 24a:	e1 f7       	brne	.-8      	; 0x244 <direction_to_string+0x2e>
			break;
 24c:	23 c0       	rjmp	.+70     	; 0x294 <direction_to_string+0x7e>
		case DOWN:
			memcpy(string, "Down", 10);
 24e:	2a e0       	ldi	r18, 0x0A	; 10
 250:	e9 e0       	ldi	r30, 0x09	; 9
 252:	f1 e0       	ldi	r31, 0x01	; 1
 254:	dc 01       	movw	r26, r24
 256:	01 90       	ld	r0, Z+
 258:	0d 92       	st	X+, r0
 25a:	2a 95       	dec	r18
 25c:	e1 f7       	brne	.-8      	; 0x256 <direction_to_string+0x40>
			break;
 25e:	1a c0       	rjmp	.+52     	; 0x294 <direction_to_string+0x7e>
		case RIGHT:
			memcpy(string, "Right", 10);
 260:	2a e0       	ldi	r18, 0x0A	; 10
 262:	ee e0       	ldi	r30, 0x0E	; 14
 264:	f1 e0       	ldi	r31, 0x01	; 1
 266:	dc 01       	movw	r26, r24
 268:	01 90       	ld	r0, Z+
 26a:	0d 92       	st	X+, r0
 26c:	2a 95       	dec	r18
 26e:	e1 f7       	brne	.-8      	; 0x268 <direction_to_string+0x52>
			break;
 270:	11 c0       	rjmp	.+34     	; 0x294 <direction_to_string+0x7e>
		case LEFT:
			memcpy(string, "Left", 10);
 272:	2a e0       	ldi	r18, 0x0A	; 10
 274:	e4 e1       	ldi	r30, 0x14	; 20
 276:	f1 e0       	ldi	r31, 0x01	; 1
 278:	dc 01       	movw	r26, r24
 27a:	01 90       	ld	r0, Z+
 27c:	0d 92       	st	X+, r0
 27e:	2a 95       	dec	r18
 280:	e1 f7       	brne	.-8      	; 0x27a <direction_to_string+0x64>
			break;
 282:	08 c0       	rjmp	.+16     	; 0x294 <direction_to_string+0x7e>
		case NEUTRAL:
			memcpy(string, "Neutral", 10);
 284:	2a e0       	ldi	r18, 0x0A	; 10
 286:	e9 e1       	ldi	r30, 0x19	; 25
 288:	f1 e0       	ldi	r31, 0x01	; 1
 28a:	dc 01       	movw	r26, r24
 28c:	01 90       	ld	r0, Z+
 28e:	0d 92       	st	X+, r0
 290:	2a 95       	dec	r18
 292:	e1 f7       	brne	.-8      	; 0x28c <direction_to_string+0x76>
			break;
	}
	return string;
 294:	cf 91       	pop	r28
 296:	08 95       	ret

00000298 <main>:


int main(void)
{
	
	USART_init();
 298:	0e 94 6b 00 	call	0xd6	; 0xd6 <USART_init>
	
	JOY_init();
 29c:	0e 94 86 00 	call	0x10c	; 0x10c <JOY_init>
		JOY_position_t position = JOY_getPosition();
		JOY_direction_t direction = JOY_getDirection();
		uint8_t left_slider = JOY_getButton(JOY_LEFT_SLIDER);
		uint8_t right_slider = JOY_getButton(JOY_RIGHT_SLIDER);
		char* string = direction_to_string(direction);
		printf("Position %d:%d / Direction: %s / Sliders: %d:%d\n", position.X, position.Y, string, left_slider, right_slider);
 2a0:	c8 e8       	ldi	r28, 0x88	; 136
 2a2:	d1 e0       	ldi	r29, 0x01	; 1
	USART_init();
	
	JOY_init();
	while(1)
	{
		JOY_position_t position = JOY_getPosition();
 2a4:	0e 94 a2 00 	call	0x144	; 0x144 <JOY_getPosition>
 2a8:	f6 2e       	mov	r15, r22
 2aa:	e7 2e       	mov	r14, r23
 2ac:	d8 2e       	mov	r13, r24
 2ae:	c9 2e       	mov	r12, r25
		JOY_direction_t direction = JOY_getDirection();
 2b0:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <JOY_getDirection>
 2b4:	18 2f       	mov	r17, r24
		uint8_t left_slider = JOY_getButton(JOY_LEFT_SLIDER);
 2b6:	81 e0       	ldi	r24, 0x01	; 1
 2b8:	0e 94 8c 00 	call	0x118	; 0x118 <JOY_getButton>
 2bc:	b8 2e       	mov	r11, r24
		uint8_t right_slider = JOY_getButton(JOY_RIGHT_SLIDER);
 2be:	82 e0       	ldi	r24, 0x02	; 2
 2c0:	0e 94 8c 00 	call	0x118	; 0x118 <JOY_getButton>
 2c4:	a8 2e       	mov	r10, r24
		char* string = direction_to_string(direction);
 2c6:	81 2f       	mov	r24, r17
 2c8:	0e 94 0b 01 	call	0x216	; 0x216 <direction_to_string>
 2cc:	08 2f       	mov	r16, r24
 2ce:	19 2f       	mov	r17, r25
		printf("Position %d:%d / Direction: %s / Sliders: %d:%d\n", position.X, position.Y, string, left_slider, right_slider);
 2d0:	1f 92       	push	r1
 2d2:	af 92       	push	r10
 2d4:	1f 92       	push	r1
 2d6:	bf 92       	push	r11
 2d8:	9f 93       	push	r25
 2da:	8f 93       	push	r24
 2dc:	cf 92       	push	r12
 2de:	df 92       	push	r13
 2e0:	ef 92       	push	r14
 2e2:	ff 92       	push	r15
 2e4:	df 93       	push	r29
 2e6:	cf 93       	push	r28
 2e8:	0e 94 26 03 	call	0x64c	; 0x64c <printf>
		free(string);
 2ec:	80 2f       	mov	r24, r16
 2ee:	91 2f       	mov	r25, r17
 2f0:	0e 94 4c 02 	call	0x498	; 0x498 <free>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2f4:	9f ef       	ldi	r25, 0xFF	; 255
 2f6:	2f e7       	ldi	r18, 0x7F	; 127
 2f8:	87 e0       	ldi	r24, 0x07	; 7
 2fa:	91 50       	subi	r25, 0x01	; 1
 2fc:	20 40       	sbci	r18, 0x00	; 0
 2fe:	80 40       	sbci	r24, 0x00	; 0
 300:	e1 f7       	brne	.-8      	; 0x2fa <main+0x62>
 302:	00 c0       	rjmp	.+0      	; 0x304 <main+0x6c>
 304:	00 00       	nop
 306:	8d b7       	in	r24, 0x3d	; 61
 308:	9e b7       	in	r25, 0x3e	; 62
 30a:	0c 96       	adiw	r24, 0x0c	; 12
 30c:	0f b6       	in	r0, 0x3f	; 63
 30e:	f8 94       	cli
 310:	9e bf       	out	0x3e, r25	; 62
 312:	0f be       	out	0x3f, r0	; 63
 314:	8d bf       	out	0x3d, r24	; 61
 316:	c6 cf       	rjmp	.-116    	; 0x2a4 <main+0xc>

00000318 <__divmodhi4>:
 318:	97 fb       	bst	r25, 7
 31a:	07 2e       	mov	r0, r23
 31c:	16 f4       	brtc	.+4      	; 0x322 <__divmodhi4+0xa>
 31e:	00 94       	com	r0
 320:	07 d0       	rcall	.+14     	; 0x330 <__divmodhi4_neg1>
 322:	77 fd       	sbrc	r23, 7
 324:	09 d0       	rcall	.+18     	; 0x338 <__divmodhi4_neg2>
 326:	0e 94 a0 01 	call	0x340	; 0x340 <__udivmodhi4>
 32a:	07 fc       	sbrc	r0, 7
 32c:	05 d0       	rcall	.+10     	; 0x338 <__divmodhi4_neg2>
 32e:	3e f4       	brtc	.+14     	; 0x33e <__divmodhi4_exit>

00000330 <__divmodhi4_neg1>:
 330:	90 95       	com	r25
 332:	81 95       	neg	r24
 334:	9f 4f       	sbci	r25, 0xFF	; 255
 336:	08 95       	ret

00000338 <__divmodhi4_neg2>:
 338:	70 95       	com	r23
 33a:	61 95       	neg	r22
 33c:	7f 4f       	sbci	r23, 0xFF	; 255

0000033e <__divmodhi4_exit>:
 33e:	08 95       	ret

00000340 <__udivmodhi4>:
 340:	aa 1b       	sub	r26, r26
 342:	bb 1b       	sub	r27, r27
 344:	51 e1       	ldi	r21, 0x11	; 17
 346:	07 c0       	rjmp	.+14     	; 0x356 <__udivmodhi4_ep>

00000348 <__udivmodhi4_loop>:
 348:	aa 1f       	adc	r26, r26
 34a:	bb 1f       	adc	r27, r27
 34c:	a6 17       	cp	r26, r22
 34e:	b7 07       	cpc	r27, r23
 350:	10 f0       	brcs	.+4      	; 0x356 <__udivmodhi4_ep>
 352:	a6 1b       	sub	r26, r22
 354:	b7 0b       	sbc	r27, r23

00000356 <__udivmodhi4_ep>:
 356:	88 1f       	adc	r24, r24
 358:	99 1f       	adc	r25, r25
 35a:	5a 95       	dec	r21
 35c:	a9 f7       	brne	.-22     	; 0x348 <__udivmodhi4_loop>
 35e:	80 95       	com	r24
 360:	90 95       	com	r25
 362:	bc 01       	movw	r22, r24
 364:	cd 01       	movw	r24, r26
 366:	08 95       	ret

00000368 <malloc>:
 368:	cf 93       	push	r28
 36a:	df 93       	push	r29
 36c:	82 30       	cpi	r24, 0x02	; 2
 36e:	91 05       	cpc	r25, r1
 370:	10 f4       	brcc	.+4      	; 0x376 <malloc+0xe>
 372:	82 e0       	ldi	r24, 0x02	; 2
 374:	90 e0       	ldi	r25, 0x00	; 0
 376:	e0 91 be 01 	lds	r30, 0x01BE
 37a:	f0 91 bf 01 	lds	r31, 0x01BF
 37e:	20 e0       	ldi	r18, 0x00	; 0
 380:	30 e0       	ldi	r19, 0x00	; 0
 382:	a0 e0       	ldi	r26, 0x00	; 0
 384:	b0 e0       	ldi	r27, 0x00	; 0
 386:	30 97       	sbiw	r30, 0x00	; 0
 388:	39 f1       	breq	.+78     	; 0x3d8 <malloc+0x70>
 38a:	40 81       	ld	r20, Z
 38c:	51 81       	ldd	r21, Z+1	; 0x01
 38e:	48 17       	cp	r20, r24
 390:	59 07       	cpc	r21, r25
 392:	b8 f0       	brcs	.+46     	; 0x3c2 <malloc+0x5a>
 394:	48 17       	cp	r20, r24
 396:	59 07       	cpc	r21, r25
 398:	71 f4       	brne	.+28     	; 0x3b6 <malloc+0x4e>
 39a:	82 81       	ldd	r24, Z+2	; 0x02
 39c:	93 81       	ldd	r25, Z+3	; 0x03
 39e:	10 97       	sbiw	r26, 0x00	; 0
 3a0:	29 f0       	breq	.+10     	; 0x3ac <malloc+0x44>
 3a2:	13 96       	adiw	r26, 0x03	; 3
 3a4:	9c 93       	st	X, r25
 3a6:	8e 93       	st	-X, r24
 3a8:	12 97       	sbiw	r26, 0x02	; 2
 3aa:	2c c0       	rjmp	.+88     	; 0x404 <malloc+0x9c>
 3ac:	90 93 bf 01 	sts	0x01BF, r25
 3b0:	80 93 be 01 	sts	0x01BE, r24
 3b4:	27 c0       	rjmp	.+78     	; 0x404 <malloc+0x9c>
 3b6:	21 15       	cp	r18, r1
 3b8:	31 05       	cpc	r19, r1
 3ba:	31 f0       	breq	.+12     	; 0x3c8 <malloc+0x60>
 3bc:	42 17       	cp	r20, r18
 3be:	53 07       	cpc	r21, r19
 3c0:	18 f0       	brcs	.+6      	; 0x3c8 <malloc+0x60>
 3c2:	a9 01       	movw	r20, r18
 3c4:	db 01       	movw	r26, r22
 3c6:	01 c0       	rjmp	.+2      	; 0x3ca <malloc+0x62>
 3c8:	ef 01       	movw	r28, r30
 3ca:	9a 01       	movw	r18, r20
 3cc:	bd 01       	movw	r22, r26
 3ce:	df 01       	movw	r26, r30
 3d0:	02 80       	ldd	r0, Z+2	; 0x02
 3d2:	f3 81       	ldd	r31, Z+3	; 0x03
 3d4:	e0 2d       	mov	r30, r0
 3d6:	d7 cf       	rjmp	.-82     	; 0x386 <malloc+0x1e>
 3d8:	21 15       	cp	r18, r1
 3da:	31 05       	cpc	r19, r1
 3dc:	f9 f0       	breq	.+62     	; 0x41c <malloc+0xb4>
 3de:	28 1b       	sub	r18, r24
 3e0:	39 0b       	sbc	r19, r25
 3e2:	24 30       	cpi	r18, 0x04	; 4
 3e4:	31 05       	cpc	r19, r1
 3e6:	80 f4       	brcc	.+32     	; 0x408 <malloc+0xa0>
 3e8:	8a 81       	ldd	r24, Y+2	; 0x02
 3ea:	9b 81       	ldd	r25, Y+3	; 0x03
 3ec:	61 15       	cp	r22, r1
 3ee:	71 05       	cpc	r23, r1
 3f0:	21 f0       	breq	.+8      	; 0x3fa <malloc+0x92>
 3f2:	fb 01       	movw	r30, r22
 3f4:	93 83       	std	Z+3, r25	; 0x03
 3f6:	82 83       	std	Z+2, r24	; 0x02
 3f8:	04 c0       	rjmp	.+8      	; 0x402 <malloc+0x9a>
 3fa:	90 93 bf 01 	sts	0x01BF, r25
 3fe:	80 93 be 01 	sts	0x01BE, r24
 402:	fe 01       	movw	r30, r28
 404:	32 96       	adiw	r30, 0x02	; 2
 406:	44 c0       	rjmp	.+136    	; 0x490 <malloc+0x128>
 408:	fe 01       	movw	r30, r28
 40a:	e2 0f       	add	r30, r18
 40c:	f3 1f       	adc	r31, r19
 40e:	81 93       	st	Z+, r24
 410:	91 93       	st	Z+, r25
 412:	22 50       	subi	r18, 0x02	; 2
 414:	31 09       	sbc	r19, r1
 416:	39 83       	std	Y+1, r19	; 0x01
 418:	28 83       	st	Y, r18
 41a:	3a c0       	rjmp	.+116    	; 0x490 <malloc+0x128>
 41c:	20 91 bc 01 	lds	r18, 0x01BC
 420:	30 91 bd 01 	lds	r19, 0x01BD
 424:	23 2b       	or	r18, r19
 426:	41 f4       	brne	.+16     	; 0x438 <malloc+0xd0>
 428:	20 91 02 01 	lds	r18, 0x0102
 42c:	30 91 03 01 	lds	r19, 0x0103
 430:	30 93 bd 01 	sts	0x01BD, r19
 434:	20 93 bc 01 	sts	0x01BC, r18
 438:	20 91 00 01 	lds	r18, 0x0100
 43c:	30 91 01 01 	lds	r19, 0x0101
 440:	21 15       	cp	r18, r1
 442:	31 05       	cpc	r19, r1
 444:	41 f4       	brne	.+16     	; 0x456 <malloc+0xee>
 446:	2d b7       	in	r18, 0x3d	; 61
 448:	3e b7       	in	r19, 0x3e	; 62
 44a:	40 91 04 01 	lds	r20, 0x0104
 44e:	50 91 05 01 	lds	r21, 0x0105
 452:	24 1b       	sub	r18, r20
 454:	35 0b       	sbc	r19, r21
 456:	e0 91 bc 01 	lds	r30, 0x01BC
 45a:	f0 91 bd 01 	lds	r31, 0x01BD
 45e:	e2 17       	cp	r30, r18
 460:	f3 07       	cpc	r31, r19
 462:	a0 f4       	brcc	.+40     	; 0x48c <malloc+0x124>
 464:	2e 1b       	sub	r18, r30
 466:	3f 0b       	sbc	r19, r31
 468:	28 17       	cp	r18, r24
 46a:	39 07       	cpc	r19, r25
 46c:	78 f0       	brcs	.+30     	; 0x48c <malloc+0x124>
 46e:	ac 01       	movw	r20, r24
 470:	4e 5f       	subi	r20, 0xFE	; 254
 472:	5f 4f       	sbci	r21, 0xFF	; 255
 474:	24 17       	cp	r18, r20
 476:	35 07       	cpc	r19, r21
 478:	48 f0       	brcs	.+18     	; 0x48c <malloc+0x124>
 47a:	4e 0f       	add	r20, r30
 47c:	5f 1f       	adc	r21, r31
 47e:	50 93 bd 01 	sts	0x01BD, r21
 482:	40 93 bc 01 	sts	0x01BC, r20
 486:	81 93       	st	Z+, r24
 488:	91 93       	st	Z+, r25
 48a:	02 c0       	rjmp	.+4      	; 0x490 <malloc+0x128>
 48c:	e0 e0       	ldi	r30, 0x00	; 0
 48e:	f0 e0       	ldi	r31, 0x00	; 0
 490:	cf 01       	movw	r24, r30
 492:	df 91       	pop	r29
 494:	cf 91       	pop	r28
 496:	08 95       	ret

00000498 <free>:
 498:	cf 93       	push	r28
 49a:	df 93       	push	r29
 49c:	00 97       	sbiw	r24, 0x00	; 0
 49e:	09 f4       	brne	.+2      	; 0x4a2 <free+0xa>
 4a0:	87 c0       	rjmp	.+270    	; 0x5b0 <__stack+0xb1>
 4a2:	fc 01       	movw	r30, r24
 4a4:	32 97       	sbiw	r30, 0x02	; 2
 4a6:	13 82       	std	Z+3, r1	; 0x03
 4a8:	12 82       	std	Z+2, r1	; 0x02
 4aa:	c0 91 be 01 	lds	r28, 0x01BE
 4ae:	d0 91 bf 01 	lds	r29, 0x01BF
 4b2:	20 97       	sbiw	r28, 0x00	; 0
 4b4:	81 f4       	brne	.+32     	; 0x4d6 <free+0x3e>
 4b6:	20 81       	ld	r18, Z
 4b8:	31 81       	ldd	r19, Z+1	; 0x01
 4ba:	28 0f       	add	r18, r24
 4bc:	39 1f       	adc	r19, r25
 4be:	80 91 bc 01 	lds	r24, 0x01BC
 4c2:	90 91 bd 01 	lds	r25, 0x01BD
 4c6:	82 17       	cp	r24, r18
 4c8:	93 07       	cpc	r25, r19
 4ca:	79 f5       	brne	.+94     	; 0x52a <__stack+0x2b>
 4cc:	f0 93 bd 01 	sts	0x01BD, r31
 4d0:	e0 93 bc 01 	sts	0x01BC, r30
 4d4:	6d c0       	rjmp	.+218    	; 0x5b0 <__stack+0xb1>
 4d6:	de 01       	movw	r26, r28
 4d8:	20 e0       	ldi	r18, 0x00	; 0
 4da:	30 e0       	ldi	r19, 0x00	; 0
 4dc:	ae 17       	cp	r26, r30
 4de:	bf 07       	cpc	r27, r31
 4e0:	50 f4       	brcc	.+20     	; 0x4f6 <free+0x5e>
 4e2:	12 96       	adiw	r26, 0x02	; 2
 4e4:	4d 91       	ld	r20, X+
 4e6:	5c 91       	ld	r21, X
 4e8:	13 97       	sbiw	r26, 0x03	; 3
 4ea:	9d 01       	movw	r18, r26
 4ec:	41 15       	cp	r20, r1
 4ee:	51 05       	cpc	r21, r1
 4f0:	09 f1       	breq	.+66     	; 0x534 <__stack+0x35>
 4f2:	da 01       	movw	r26, r20
 4f4:	f3 cf       	rjmp	.-26     	; 0x4dc <free+0x44>
 4f6:	b3 83       	std	Z+3, r27	; 0x03
 4f8:	a2 83       	std	Z+2, r26	; 0x02
 4fa:	40 81       	ld	r20, Z
 4fc:	51 81       	ldd	r21, Z+1	; 0x01
 4fe:	84 0f       	add	r24, r20
 500:	95 1f       	adc	r25, r21
 502:	8a 17       	cp	r24, r26
 504:	9b 07       	cpc	r25, r27
 506:	71 f4       	brne	.+28     	; 0x524 <__stack+0x25>
 508:	8d 91       	ld	r24, X+
 50a:	9c 91       	ld	r25, X
 50c:	11 97       	sbiw	r26, 0x01	; 1
 50e:	84 0f       	add	r24, r20
 510:	95 1f       	adc	r25, r21
 512:	02 96       	adiw	r24, 0x02	; 2
 514:	91 83       	std	Z+1, r25	; 0x01
 516:	80 83       	st	Z, r24
 518:	12 96       	adiw	r26, 0x02	; 2
 51a:	8d 91       	ld	r24, X+
 51c:	9c 91       	ld	r25, X
 51e:	13 97       	sbiw	r26, 0x03	; 3
 520:	93 83       	std	Z+3, r25	; 0x03
 522:	82 83       	std	Z+2, r24	; 0x02
 524:	21 15       	cp	r18, r1
 526:	31 05       	cpc	r19, r1
 528:	29 f4       	brne	.+10     	; 0x534 <__stack+0x35>
 52a:	f0 93 bf 01 	sts	0x01BF, r31
 52e:	e0 93 be 01 	sts	0x01BE, r30
 532:	3e c0       	rjmp	.+124    	; 0x5b0 <__stack+0xb1>
 534:	d9 01       	movw	r26, r18
 536:	13 96       	adiw	r26, 0x03	; 3
 538:	fc 93       	st	X, r31
 53a:	ee 93       	st	-X, r30
 53c:	12 97       	sbiw	r26, 0x02	; 2
 53e:	4d 91       	ld	r20, X+
 540:	5d 91       	ld	r21, X+
 542:	a4 0f       	add	r26, r20
 544:	b5 1f       	adc	r27, r21
 546:	ea 17       	cp	r30, r26
 548:	fb 07       	cpc	r31, r27
 54a:	79 f4       	brne	.+30     	; 0x56a <__stack+0x6b>
 54c:	80 81       	ld	r24, Z
 54e:	91 81       	ldd	r25, Z+1	; 0x01
 550:	84 0f       	add	r24, r20
 552:	95 1f       	adc	r25, r21
 554:	02 96       	adiw	r24, 0x02	; 2
 556:	d9 01       	movw	r26, r18
 558:	11 96       	adiw	r26, 0x01	; 1
 55a:	9c 93       	st	X, r25
 55c:	8e 93       	st	-X, r24
 55e:	82 81       	ldd	r24, Z+2	; 0x02
 560:	93 81       	ldd	r25, Z+3	; 0x03
 562:	13 96       	adiw	r26, 0x03	; 3
 564:	9c 93       	st	X, r25
 566:	8e 93       	st	-X, r24
 568:	12 97       	sbiw	r26, 0x02	; 2
 56a:	e0 e0       	ldi	r30, 0x00	; 0
 56c:	f0 e0       	ldi	r31, 0x00	; 0
 56e:	8a 81       	ldd	r24, Y+2	; 0x02
 570:	9b 81       	ldd	r25, Y+3	; 0x03
 572:	00 97       	sbiw	r24, 0x00	; 0
 574:	19 f0       	breq	.+6      	; 0x57c <__stack+0x7d>
 576:	fe 01       	movw	r30, r28
 578:	ec 01       	movw	r28, r24
 57a:	f9 cf       	rjmp	.-14     	; 0x56e <__stack+0x6f>
 57c:	ce 01       	movw	r24, r28
 57e:	02 96       	adiw	r24, 0x02	; 2
 580:	28 81       	ld	r18, Y
 582:	39 81       	ldd	r19, Y+1	; 0x01
 584:	82 0f       	add	r24, r18
 586:	93 1f       	adc	r25, r19
 588:	20 91 bc 01 	lds	r18, 0x01BC
 58c:	30 91 bd 01 	lds	r19, 0x01BD
 590:	28 17       	cp	r18, r24
 592:	39 07       	cpc	r19, r25
 594:	69 f4       	brne	.+26     	; 0x5b0 <__stack+0xb1>
 596:	30 97       	sbiw	r30, 0x00	; 0
 598:	29 f4       	brne	.+10     	; 0x5a4 <__stack+0xa5>
 59a:	10 92 bf 01 	sts	0x01BF, r1
 59e:	10 92 be 01 	sts	0x01BE, r1
 5a2:	02 c0       	rjmp	.+4      	; 0x5a8 <__stack+0xa9>
 5a4:	13 82       	std	Z+3, r1	; 0x03
 5a6:	12 82       	std	Z+2, r1	; 0x02
 5a8:	d0 93 bd 01 	sts	0x01BD, r29
 5ac:	c0 93 bc 01 	sts	0x01BC, r28
 5b0:	df 91       	pop	r29
 5b2:	cf 91       	pop	r28
 5b4:	08 95       	ret

000005b6 <fdevopen>:
 5b6:	0f 93       	push	r16
 5b8:	1f 93       	push	r17
 5ba:	cf 93       	push	r28
 5bc:	df 93       	push	r29
 5be:	ec 01       	movw	r28, r24
 5c0:	8b 01       	movw	r16, r22
 5c2:	00 97       	sbiw	r24, 0x00	; 0
 5c4:	31 f4       	brne	.+12     	; 0x5d2 <fdevopen+0x1c>
 5c6:	61 15       	cp	r22, r1
 5c8:	71 05       	cpc	r23, r1
 5ca:	19 f4       	brne	.+6      	; 0x5d2 <fdevopen+0x1c>
 5cc:	80 e0       	ldi	r24, 0x00	; 0
 5ce:	90 e0       	ldi	r25, 0x00	; 0
 5d0:	38 c0       	rjmp	.+112    	; 0x642 <fdevopen+0x8c>
 5d2:	6e e0       	ldi	r22, 0x0E	; 14
 5d4:	70 e0       	ldi	r23, 0x00	; 0
 5d6:	81 e0       	ldi	r24, 0x01	; 1
 5d8:	90 e0       	ldi	r25, 0x00	; 0
 5da:	0e 94 0c 05 	call	0xa18	; 0xa18 <calloc>
 5de:	fc 01       	movw	r30, r24
 5e0:	00 97       	sbiw	r24, 0x00	; 0
 5e2:	a1 f3       	breq	.-24     	; 0x5cc <fdevopen+0x16>
 5e4:	80 e8       	ldi	r24, 0x80	; 128
 5e6:	83 83       	std	Z+3, r24	; 0x03
 5e8:	01 15       	cp	r16, r1
 5ea:	11 05       	cpc	r17, r1
 5ec:	71 f0       	breq	.+28     	; 0x60a <fdevopen+0x54>
 5ee:	13 87       	std	Z+11, r17	; 0x0b
 5f0:	02 87       	std	Z+10, r16	; 0x0a
 5f2:	81 e8       	ldi	r24, 0x81	; 129
 5f4:	83 83       	std	Z+3, r24	; 0x03
 5f6:	80 91 c0 01 	lds	r24, 0x01C0
 5fa:	90 91 c1 01 	lds	r25, 0x01C1
 5fe:	89 2b       	or	r24, r25
 600:	21 f4       	brne	.+8      	; 0x60a <fdevopen+0x54>
 602:	f0 93 c1 01 	sts	0x01C1, r31
 606:	e0 93 c0 01 	sts	0x01C0, r30
 60a:	20 97       	sbiw	r28, 0x00	; 0
 60c:	c9 f0       	breq	.+50     	; 0x640 <fdevopen+0x8a>
 60e:	d1 87       	std	Z+9, r29	; 0x09
 610:	c0 87       	std	Z+8, r28	; 0x08
 612:	83 81       	ldd	r24, Z+3	; 0x03
 614:	82 60       	ori	r24, 0x02	; 2
 616:	83 83       	std	Z+3, r24	; 0x03
 618:	80 91 c2 01 	lds	r24, 0x01C2
 61c:	90 91 c3 01 	lds	r25, 0x01C3
 620:	89 2b       	or	r24, r25
 622:	71 f4       	brne	.+28     	; 0x640 <fdevopen+0x8a>
 624:	f0 93 c3 01 	sts	0x01C3, r31
 628:	e0 93 c2 01 	sts	0x01C2, r30
 62c:	80 91 c4 01 	lds	r24, 0x01C4
 630:	90 91 c5 01 	lds	r25, 0x01C5
 634:	89 2b       	or	r24, r25
 636:	21 f4       	brne	.+8      	; 0x640 <fdevopen+0x8a>
 638:	f0 93 c5 01 	sts	0x01C5, r31
 63c:	e0 93 c4 01 	sts	0x01C4, r30
 640:	cf 01       	movw	r24, r30
 642:	df 91       	pop	r29
 644:	cf 91       	pop	r28
 646:	1f 91       	pop	r17
 648:	0f 91       	pop	r16
 64a:	08 95       	ret

0000064c <printf>:
 64c:	a0 e0       	ldi	r26, 0x00	; 0
 64e:	b0 e0       	ldi	r27, 0x00	; 0
 650:	ec e2       	ldi	r30, 0x2C	; 44
 652:	f3 e0       	ldi	r31, 0x03	; 3
 654:	0c 94 e5 05 	jmp	0xbca	; 0xbca <__prologue_saves__+0x20>
 658:	fe 01       	movw	r30, r28
 65a:	35 96       	adiw	r30, 0x05	; 5
 65c:	61 91       	ld	r22, Z+
 65e:	71 91       	ld	r23, Z+
 660:	af 01       	movw	r20, r30
 662:	80 91 c2 01 	lds	r24, 0x01C2
 666:	90 91 c3 01 	lds	r25, 0x01C3
 66a:	0e 94 3a 03 	call	0x674	; 0x674 <vfprintf>
 66e:	e2 e0       	ldi	r30, 0x02	; 2
 670:	0c 94 01 06 	jmp	0xc02	; 0xc02 <__epilogue_restores__+0x20>

00000674 <vfprintf>:
 674:	ac e0       	ldi	r26, 0x0C	; 12
 676:	b0 e0       	ldi	r27, 0x00	; 0
 678:	e0 e4       	ldi	r30, 0x40	; 64
 67a:	f3 e0       	ldi	r31, 0x03	; 3
 67c:	0c 94 d5 05 	jmp	0xbaa	; 0xbaa <__prologue_saves__>
 680:	7c 01       	movw	r14, r24
 682:	6b 01       	movw	r12, r22
 684:	8a 01       	movw	r16, r20
 686:	fc 01       	movw	r30, r24
 688:	17 82       	std	Z+7, r1	; 0x07
 68a:	16 82       	std	Z+6, r1	; 0x06
 68c:	83 81       	ldd	r24, Z+3	; 0x03
 68e:	81 ff       	sbrs	r24, 1
 690:	bd c1       	rjmp	.+890    	; 0xa0c <vfprintf+0x398>
 692:	ce 01       	movw	r24, r28
 694:	01 96       	adiw	r24, 0x01	; 1
 696:	4c 01       	movw	r8, r24
 698:	f7 01       	movw	r30, r14
 69a:	93 81       	ldd	r25, Z+3	; 0x03
 69c:	f6 01       	movw	r30, r12
 69e:	93 fd       	sbrc	r25, 3
 6a0:	85 91       	lpm	r24, Z+
 6a2:	93 ff       	sbrs	r25, 3
 6a4:	81 91       	ld	r24, Z+
 6a6:	6f 01       	movw	r12, r30
 6a8:	88 23       	and	r24, r24
 6aa:	09 f4       	brne	.+2      	; 0x6ae <vfprintf+0x3a>
 6ac:	ab c1       	rjmp	.+854    	; 0xa04 <vfprintf+0x390>
 6ae:	85 32       	cpi	r24, 0x25	; 37
 6b0:	39 f4       	brne	.+14     	; 0x6c0 <vfprintf+0x4c>
 6b2:	93 fd       	sbrc	r25, 3
 6b4:	85 91       	lpm	r24, Z+
 6b6:	93 ff       	sbrs	r25, 3
 6b8:	81 91       	ld	r24, Z+
 6ba:	6f 01       	movw	r12, r30
 6bc:	85 32       	cpi	r24, 0x25	; 37
 6be:	29 f4       	brne	.+10     	; 0x6ca <vfprintf+0x56>
 6c0:	b7 01       	movw	r22, r14
 6c2:	90 e0       	ldi	r25, 0x00	; 0
 6c4:	0e 94 45 05 	call	0xa8a	; 0xa8a <fputc>
 6c8:	e7 cf       	rjmp	.-50     	; 0x698 <vfprintf+0x24>
 6ca:	51 2c       	mov	r5, r1
 6cc:	31 2c       	mov	r3, r1
 6ce:	20 e0       	ldi	r18, 0x00	; 0
 6d0:	20 32       	cpi	r18, 0x20	; 32
 6d2:	a0 f4       	brcc	.+40     	; 0x6fc <vfprintf+0x88>
 6d4:	8b 32       	cpi	r24, 0x2B	; 43
 6d6:	69 f0       	breq	.+26     	; 0x6f2 <vfprintf+0x7e>
 6d8:	30 f4       	brcc	.+12     	; 0x6e6 <vfprintf+0x72>
 6da:	80 32       	cpi	r24, 0x20	; 32
 6dc:	59 f0       	breq	.+22     	; 0x6f4 <vfprintf+0x80>
 6de:	83 32       	cpi	r24, 0x23	; 35
 6e0:	69 f4       	brne	.+26     	; 0x6fc <vfprintf+0x88>
 6e2:	20 61       	ori	r18, 0x10	; 16
 6e4:	2c c0       	rjmp	.+88     	; 0x73e <vfprintf+0xca>
 6e6:	8d 32       	cpi	r24, 0x2D	; 45
 6e8:	39 f0       	breq	.+14     	; 0x6f8 <vfprintf+0x84>
 6ea:	80 33       	cpi	r24, 0x30	; 48
 6ec:	39 f4       	brne	.+14     	; 0x6fc <vfprintf+0x88>
 6ee:	21 60       	ori	r18, 0x01	; 1
 6f0:	26 c0       	rjmp	.+76     	; 0x73e <vfprintf+0xca>
 6f2:	22 60       	ori	r18, 0x02	; 2
 6f4:	24 60       	ori	r18, 0x04	; 4
 6f6:	23 c0       	rjmp	.+70     	; 0x73e <vfprintf+0xca>
 6f8:	28 60       	ori	r18, 0x08	; 8
 6fa:	21 c0       	rjmp	.+66     	; 0x73e <vfprintf+0xca>
 6fc:	27 fd       	sbrc	r18, 7
 6fe:	27 c0       	rjmp	.+78     	; 0x74e <vfprintf+0xda>
 700:	30 ed       	ldi	r19, 0xD0	; 208
 702:	38 0f       	add	r19, r24
 704:	3a 30       	cpi	r19, 0x0A	; 10
 706:	78 f4       	brcc	.+30     	; 0x726 <vfprintf+0xb2>
 708:	26 ff       	sbrs	r18, 6
 70a:	06 c0       	rjmp	.+12     	; 0x718 <vfprintf+0xa4>
 70c:	fa e0       	ldi	r31, 0x0A	; 10
 70e:	5f 9e       	mul	r5, r31
 710:	30 0d       	add	r19, r0
 712:	11 24       	eor	r1, r1
 714:	53 2e       	mov	r5, r19
 716:	13 c0       	rjmp	.+38     	; 0x73e <vfprintf+0xca>
 718:	8a e0       	ldi	r24, 0x0A	; 10
 71a:	38 9e       	mul	r3, r24
 71c:	30 0d       	add	r19, r0
 71e:	11 24       	eor	r1, r1
 720:	33 2e       	mov	r3, r19
 722:	20 62       	ori	r18, 0x20	; 32
 724:	0c c0       	rjmp	.+24     	; 0x73e <vfprintf+0xca>
 726:	8e 32       	cpi	r24, 0x2E	; 46
 728:	21 f4       	brne	.+8      	; 0x732 <vfprintf+0xbe>
 72a:	26 fd       	sbrc	r18, 6
 72c:	6b c1       	rjmp	.+726    	; 0xa04 <vfprintf+0x390>
 72e:	20 64       	ori	r18, 0x40	; 64
 730:	06 c0       	rjmp	.+12     	; 0x73e <vfprintf+0xca>
 732:	8c 36       	cpi	r24, 0x6C	; 108
 734:	11 f4       	brne	.+4      	; 0x73a <vfprintf+0xc6>
 736:	20 68       	ori	r18, 0x80	; 128
 738:	02 c0       	rjmp	.+4      	; 0x73e <vfprintf+0xca>
 73a:	88 36       	cpi	r24, 0x68	; 104
 73c:	41 f4       	brne	.+16     	; 0x74e <vfprintf+0xda>
 73e:	f6 01       	movw	r30, r12
 740:	93 fd       	sbrc	r25, 3
 742:	85 91       	lpm	r24, Z+
 744:	93 ff       	sbrs	r25, 3
 746:	81 91       	ld	r24, Z+
 748:	6f 01       	movw	r12, r30
 74a:	81 11       	cpse	r24, r1
 74c:	c1 cf       	rjmp	.-126    	; 0x6d0 <vfprintf+0x5c>
 74e:	98 2f       	mov	r25, r24
 750:	9f 7d       	andi	r25, 0xDF	; 223
 752:	95 54       	subi	r25, 0x45	; 69
 754:	93 30       	cpi	r25, 0x03	; 3
 756:	28 f4       	brcc	.+10     	; 0x762 <vfprintf+0xee>
 758:	0c 5f       	subi	r16, 0xFC	; 252
 75a:	1f 4f       	sbci	r17, 0xFF	; 255
 75c:	ff e3       	ldi	r31, 0x3F	; 63
 75e:	f9 83       	std	Y+1, r31	; 0x01
 760:	0d c0       	rjmp	.+26     	; 0x77c <vfprintf+0x108>
 762:	83 36       	cpi	r24, 0x63	; 99
 764:	31 f0       	breq	.+12     	; 0x772 <vfprintf+0xfe>
 766:	83 37       	cpi	r24, 0x73	; 115
 768:	71 f0       	breq	.+28     	; 0x786 <vfprintf+0x112>
 76a:	83 35       	cpi	r24, 0x53	; 83
 76c:	09 f0       	breq	.+2      	; 0x770 <vfprintf+0xfc>
 76e:	5b c0       	rjmp	.+182    	; 0x826 <vfprintf+0x1b2>
 770:	22 c0       	rjmp	.+68     	; 0x7b6 <vfprintf+0x142>
 772:	f8 01       	movw	r30, r16
 774:	80 81       	ld	r24, Z
 776:	89 83       	std	Y+1, r24	; 0x01
 778:	0e 5f       	subi	r16, 0xFE	; 254
 77a:	1f 4f       	sbci	r17, 0xFF	; 255
 77c:	44 24       	eor	r4, r4
 77e:	43 94       	inc	r4
 780:	51 2c       	mov	r5, r1
 782:	54 01       	movw	r10, r8
 784:	15 c0       	rjmp	.+42     	; 0x7b0 <vfprintf+0x13c>
 786:	38 01       	movw	r6, r16
 788:	f2 e0       	ldi	r31, 0x02	; 2
 78a:	6f 0e       	add	r6, r31
 78c:	71 1c       	adc	r7, r1
 78e:	f8 01       	movw	r30, r16
 790:	a0 80       	ld	r10, Z
 792:	b1 80       	ldd	r11, Z+1	; 0x01
 794:	26 ff       	sbrs	r18, 6
 796:	03 c0       	rjmp	.+6      	; 0x79e <vfprintf+0x12a>
 798:	65 2d       	mov	r22, r5
 79a:	70 e0       	ldi	r23, 0x00	; 0
 79c:	02 c0       	rjmp	.+4      	; 0x7a2 <vfprintf+0x12e>
 79e:	6f ef       	ldi	r22, 0xFF	; 255
 7a0:	7f ef       	ldi	r23, 0xFF	; 255
 7a2:	c5 01       	movw	r24, r10
 7a4:	2c 87       	std	Y+12, r18	; 0x0c
 7a6:	0e 94 3a 05 	call	0xa74	; 0xa74 <strnlen>
 7aa:	2c 01       	movw	r4, r24
 7ac:	83 01       	movw	r16, r6
 7ae:	2c 85       	ldd	r18, Y+12	; 0x0c
 7b0:	2f 77       	andi	r18, 0x7F	; 127
 7b2:	22 2e       	mov	r2, r18
 7b4:	17 c0       	rjmp	.+46     	; 0x7e4 <vfprintf+0x170>
 7b6:	38 01       	movw	r6, r16
 7b8:	f2 e0       	ldi	r31, 0x02	; 2
 7ba:	6f 0e       	add	r6, r31
 7bc:	71 1c       	adc	r7, r1
 7be:	f8 01       	movw	r30, r16
 7c0:	a0 80       	ld	r10, Z
 7c2:	b1 80       	ldd	r11, Z+1	; 0x01
 7c4:	26 ff       	sbrs	r18, 6
 7c6:	03 c0       	rjmp	.+6      	; 0x7ce <vfprintf+0x15a>
 7c8:	65 2d       	mov	r22, r5
 7ca:	70 e0       	ldi	r23, 0x00	; 0
 7cc:	02 c0       	rjmp	.+4      	; 0x7d2 <vfprintf+0x15e>
 7ce:	6f ef       	ldi	r22, 0xFF	; 255
 7d0:	7f ef       	ldi	r23, 0xFF	; 255
 7d2:	c5 01       	movw	r24, r10
 7d4:	2c 87       	std	Y+12, r18	; 0x0c
 7d6:	0e 94 28 05 	call	0xa50	; 0xa50 <strnlen_P>
 7da:	2c 01       	movw	r4, r24
 7dc:	2c 85       	ldd	r18, Y+12	; 0x0c
 7de:	20 68       	ori	r18, 0x80	; 128
 7e0:	22 2e       	mov	r2, r18
 7e2:	83 01       	movw	r16, r6
 7e4:	23 fc       	sbrc	r2, 3
 7e6:	1b c0       	rjmp	.+54     	; 0x81e <vfprintf+0x1aa>
 7e8:	83 2d       	mov	r24, r3
 7ea:	90 e0       	ldi	r25, 0x00	; 0
 7ec:	48 16       	cp	r4, r24
 7ee:	59 06       	cpc	r5, r25
 7f0:	b0 f4       	brcc	.+44     	; 0x81e <vfprintf+0x1aa>
 7f2:	b7 01       	movw	r22, r14
 7f4:	80 e2       	ldi	r24, 0x20	; 32
 7f6:	90 e0       	ldi	r25, 0x00	; 0
 7f8:	0e 94 45 05 	call	0xa8a	; 0xa8a <fputc>
 7fc:	3a 94       	dec	r3
 7fe:	f4 cf       	rjmp	.-24     	; 0x7e8 <vfprintf+0x174>
 800:	f5 01       	movw	r30, r10
 802:	27 fc       	sbrc	r2, 7
 804:	85 91       	lpm	r24, Z+
 806:	27 fe       	sbrs	r2, 7
 808:	81 91       	ld	r24, Z+
 80a:	5f 01       	movw	r10, r30
 80c:	b7 01       	movw	r22, r14
 80e:	90 e0       	ldi	r25, 0x00	; 0
 810:	0e 94 45 05 	call	0xa8a	; 0xa8a <fputc>
 814:	31 10       	cpse	r3, r1
 816:	3a 94       	dec	r3
 818:	f1 e0       	ldi	r31, 0x01	; 1
 81a:	4f 1a       	sub	r4, r31
 81c:	51 08       	sbc	r5, r1
 81e:	41 14       	cp	r4, r1
 820:	51 04       	cpc	r5, r1
 822:	71 f7       	brne	.-36     	; 0x800 <vfprintf+0x18c>
 824:	e5 c0       	rjmp	.+458    	; 0x9f0 <vfprintf+0x37c>
 826:	84 36       	cpi	r24, 0x64	; 100
 828:	11 f0       	breq	.+4      	; 0x82e <vfprintf+0x1ba>
 82a:	89 36       	cpi	r24, 0x69	; 105
 82c:	39 f5       	brne	.+78     	; 0x87c <vfprintf+0x208>
 82e:	f8 01       	movw	r30, r16
 830:	27 ff       	sbrs	r18, 7
 832:	07 c0       	rjmp	.+14     	; 0x842 <vfprintf+0x1ce>
 834:	60 81       	ld	r22, Z
 836:	71 81       	ldd	r23, Z+1	; 0x01
 838:	82 81       	ldd	r24, Z+2	; 0x02
 83a:	93 81       	ldd	r25, Z+3	; 0x03
 83c:	0c 5f       	subi	r16, 0xFC	; 252
 83e:	1f 4f       	sbci	r17, 0xFF	; 255
 840:	08 c0       	rjmp	.+16     	; 0x852 <vfprintf+0x1de>
 842:	60 81       	ld	r22, Z
 844:	71 81       	ldd	r23, Z+1	; 0x01
 846:	88 27       	eor	r24, r24
 848:	77 fd       	sbrc	r23, 7
 84a:	80 95       	com	r24
 84c:	98 2f       	mov	r25, r24
 84e:	0e 5f       	subi	r16, 0xFE	; 254
 850:	1f 4f       	sbci	r17, 0xFF	; 255
 852:	2f 76       	andi	r18, 0x6F	; 111
 854:	b2 2e       	mov	r11, r18
 856:	97 ff       	sbrs	r25, 7
 858:	09 c0       	rjmp	.+18     	; 0x86c <vfprintf+0x1f8>
 85a:	90 95       	com	r25
 85c:	80 95       	com	r24
 85e:	70 95       	com	r23
 860:	61 95       	neg	r22
 862:	7f 4f       	sbci	r23, 0xFF	; 255
 864:	8f 4f       	sbci	r24, 0xFF	; 255
 866:	9f 4f       	sbci	r25, 0xFF	; 255
 868:	20 68       	ori	r18, 0x80	; 128
 86a:	b2 2e       	mov	r11, r18
 86c:	2a e0       	ldi	r18, 0x0A	; 10
 86e:	30 e0       	ldi	r19, 0x00	; 0
 870:	a4 01       	movw	r20, r8
 872:	0e 94 77 05 	call	0xaee	; 0xaee <__ultoa_invert>
 876:	a8 2e       	mov	r10, r24
 878:	a8 18       	sub	r10, r8
 87a:	44 c0       	rjmp	.+136    	; 0x904 <vfprintf+0x290>
 87c:	85 37       	cpi	r24, 0x75	; 117
 87e:	29 f4       	brne	.+10     	; 0x88a <vfprintf+0x216>
 880:	2f 7e       	andi	r18, 0xEF	; 239
 882:	b2 2e       	mov	r11, r18
 884:	2a e0       	ldi	r18, 0x0A	; 10
 886:	30 e0       	ldi	r19, 0x00	; 0
 888:	25 c0       	rjmp	.+74     	; 0x8d4 <vfprintf+0x260>
 88a:	f2 2f       	mov	r31, r18
 88c:	f9 7f       	andi	r31, 0xF9	; 249
 88e:	bf 2e       	mov	r11, r31
 890:	8f 36       	cpi	r24, 0x6F	; 111
 892:	c1 f0       	breq	.+48     	; 0x8c4 <vfprintf+0x250>
 894:	18 f4       	brcc	.+6      	; 0x89c <vfprintf+0x228>
 896:	88 35       	cpi	r24, 0x58	; 88
 898:	79 f0       	breq	.+30     	; 0x8b8 <vfprintf+0x244>
 89a:	b4 c0       	rjmp	.+360    	; 0xa04 <vfprintf+0x390>
 89c:	80 37       	cpi	r24, 0x70	; 112
 89e:	19 f0       	breq	.+6      	; 0x8a6 <vfprintf+0x232>
 8a0:	88 37       	cpi	r24, 0x78	; 120
 8a2:	21 f0       	breq	.+8      	; 0x8ac <vfprintf+0x238>
 8a4:	af c0       	rjmp	.+350    	; 0xa04 <vfprintf+0x390>
 8a6:	2f 2f       	mov	r18, r31
 8a8:	20 61       	ori	r18, 0x10	; 16
 8aa:	b2 2e       	mov	r11, r18
 8ac:	b4 fe       	sbrs	r11, 4
 8ae:	0d c0       	rjmp	.+26     	; 0x8ca <vfprintf+0x256>
 8b0:	8b 2d       	mov	r24, r11
 8b2:	84 60       	ori	r24, 0x04	; 4
 8b4:	b8 2e       	mov	r11, r24
 8b6:	09 c0       	rjmp	.+18     	; 0x8ca <vfprintf+0x256>
 8b8:	24 ff       	sbrs	r18, 4
 8ba:	0a c0       	rjmp	.+20     	; 0x8d0 <vfprintf+0x25c>
 8bc:	9f 2f       	mov	r25, r31
 8be:	96 60       	ori	r25, 0x06	; 6
 8c0:	b9 2e       	mov	r11, r25
 8c2:	06 c0       	rjmp	.+12     	; 0x8d0 <vfprintf+0x25c>
 8c4:	28 e0       	ldi	r18, 0x08	; 8
 8c6:	30 e0       	ldi	r19, 0x00	; 0
 8c8:	05 c0       	rjmp	.+10     	; 0x8d4 <vfprintf+0x260>
 8ca:	20 e1       	ldi	r18, 0x10	; 16
 8cc:	30 e0       	ldi	r19, 0x00	; 0
 8ce:	02 c0       	rjmp	.+4      	; 0x8d4 <vfprintf+0x260>
 8d0:	20 e1       	ldi	r18, 0x10	; 16
 8d2:	32 e0       	ldi	r19, 0x02	; 2
 8d4:	f8 01       	movw	r30, r16
 8d6:	b7 fe       	sbrs	r11, 7
 8d8:	07 c0       	rjmp	.+14     	; 0x8e8 <vfprintf+0x274>
 8da:	60 81       	ld	r22, Z
 8dc:	71 81       	ldd	r23, Z+1	; 0x01
 8de:	82 81       	ldd	r24, Z+2	; 0x02
 8e0:	93 81       	ldd	r25, Z+3	; 0x03
 8e2:	0c 5f       	subi	r16, 0xFC	; 252
 8e4:	1f 4f       	sbci	r17, 0xFF	; 255
 8e6:	06 c0       	rjmp	.+12     	; 0x8f4 <vfprintf+0x280>
 8e8:	60 81       	ld	r22, Z
 8ea:	71 81       	ldd	r23, Z+1	; 0x01
 8ec:	80 e0       	ldi	r24, 0x00	; 0
 8ee:	90 e0       	ldi	r25, 0x00	; 0
 8f0:	0e 5f       	subi	r16, 0xFE	; 254
 8f2:	1f 4f       	sbci	r17, 0xFF	; 255
 8f4:	a4 01       	movw	r20, r8
 8f6:	0e 94 77 05 	call	0xaee	; 0xaee <__ultoa_invert>
 8fa:	a8 2e       	mov	r10, r24
 8fc:	a8 18       	sub	r10, r8
 8fe:	fb 2d       	mov	r31, r11
 900:	ff 77       	andi	r31, 0x7F	; 127
 902:	bf 2e       	mov	r11, r31
 904:	b6 fe       	sbrs	r11, 6
 906:	0b c0       	rjmp	.+22     	; 0x91e <vfprintf+0x2aa>
 908:	2b 2d       	mov	r18, r11
 90a:	2e 7f       	andi	r18, 0xFE	; 254
 90c:	a5 14       	cp	r10, r5
 90e:	50 f4       	brcc	.+20     	; 0x924 <vfprintf+0x2b0>
 910:	b4 fe       	sbrs	r11, 4
 912:	0a c0       	rjmp	.+20     	; 0x928 <vfprintf+0x2b4>
 914:	b2 fc       	sbrc	r11, 2
 916:	08 c0       	rjmp	.+16     	; 0x928 <vfprintf+0x2b4>
 918:	2b 2d       	mov	r18, r11
 91a:	2e 7e       	andi	r18, 0xEE	; 238
 91c:	05 c0       	rjmp	.+10     	; 0x928 <vfprintf+0x2b4>
 91e:	7a 2c       	mov	r7, r10
 920:	2b 2d       	mov	r18, r11
 922:	03 c0       	rjmp	.+6      	; 0x92a <vfprintf+0x2b6>
 924:	7a 2c       	mov	r7, r10
 926:	01 c0       	rjmp	.+2      	; 0x92a <vfprintf+0x2b6>
 928:	75 2c       	mov	r7, r5
 92a:	24 ff       	sbrs	r18, 4
 92c:	0d c0       	rjmp	.+26     	; 0x948 <vfprintf+0x2d4>
 92e:	fe 01       	movw	r30, r28
 930:	ea 0d       	add	r30, r10
 932:	f1 1d       	adc	r31, r1
 934:	80 81       	ld	r24, Z
 936:	80 33       	cpi	r24, 0x30	; 48
 938:	11 f4       	brne	.+4      	; 0x93e <vfprintf+0x2ca>
 93a:	29 7e       	andi	r18, 0xE9	; 233
 93c:	09 c0       	rjmp	.+18     	; 0x950 <vfprintf+0x2dc>
 93e:	22 ff       	sbrs	r18, 2
 940:	06 c0       	rjmp	.+12     	; 0x94e <vfprintf+0x2da>
 942:	73 94       	inc	r7
 944:	73 94       	inc	r7
 946:	04 c0       	rjmp	.+8      	; 0x950 <vfprintf+0x2dc>
 948:	82 2f       	mov	r24, r18
 94a:	86 78       	andi	r24, 0x86	; 134
 94c:	09 f0       	breq	.+2      	; 0x950 <vfprintf+0x2dc>
 94e:	73 94       	inc	r7
 950:	23 fd       	sbrc	r18, 3
 952:	13 c0       	rjmp	.+38     	; 0x97a <vfprintf+0x306>
 954:	20 ff       	sbrs	r18, 0
 956:	06 c0       	rjmp	.+12     	; 0x964 <vfprintf+0x2f0>
 958:	5a 2c       	mov	r5, r10
 95a:	73 14       	cp	r7, r3
 95c:	18 f4       	brcc	.+6      	; 0x964 <vfprintf+0x2f0>
 95e:	53 0c       	add	r5, r3
 960:	57 18       	sub	r5, r7
 962:	73 2c       	mov	r7, r3
 964:	73 14       	cp	r7, r3
 966:	68 f4       	brcc	.+26     	; 0x982 <vfprintf+0x30e>
 968:	b7 01       	movw	r22, r14
 96a:	80 e2       	ldi	r24, 0x20	; 32
 96c:	90 e0       	ldi	r25, 0x00	; 0
 96e:	2c 87       	std	Y+12, r18	; 0x0c
 970:	0e 94 45 05 	call	0xa8a	; 0xa8a <fputc>
 974:	73 94       	inc	r7
 976:	2c 85       	ldd	r18, Y+12	; 0x0c
 978:	f5 cf       	rjmp	.-22     	; 0x964 <vfprintf+0x2f0>
 97a:	73 14       	cp	r7, r3
 97c:	10 f4       	brcc	.+4      	; 0x982 <vfprintf+0x30e>
 97e:	37 18       	sub	r3, r7
 980:	01 c0       	rjmp	.+2      	; 0x984 <vfprintf+0x310>
 982:	31 2c       	mov	r3, r1
 984:	24 ff       	sbrs	r18, 4
 986:	12 c0       	rjmp	.+36     	; 0x9ac <vfprintf+0x338>
 988:	b7 01       	movw	r22, r14
 98a:	80 e3       	ldi	r24, 0x30	; 48
 98c:	90 e0       	ldi	r25, 0x00	; 0
 98e:	2c 87       	std	Y+12, r18	; 0x0c
 990:	0e 94 45 05 	call	0xa8a	; 0xa8a <fputc>
 994:	2c 85       	ldd	r18, Y+12	; 0x0c
 996:	22 ff       	sbrs	r18, 2
 998:	17 c0       	rjmp	.+46     	; 0x9c8 <vfprintf+0x354>
 99a:	21 ff       	sbrs	r18, 1
 99c:	03 c0       	rjmp	.+6      	; 0x9a4 <vfprintf+0x330>
 99e:	88 e5       	ldi	r24, 0x58	; 88
 9a0:	90 e0       	ldi	r25, 0x00	; 0
 9a2:	02 c0       	rjmp	.+4      	; 0x9a8 <vfprintf+0x334>
 9a4:	88 e7       	ldi	r24, 0x78	; 120
 9a6:	90 e0       	ldi	r25, 0x00	; 0
 9a8:	b7 01       	movw	r22, r14
 9aa:	0c c0       	rjmp	.+24     	; 0x9c4 <vfprintf+0x350>
 9ac:	82 2f       	mov	r24, r18
 9ae:	86 78       	andi	r24, 0x86	; 134
 9b0:	59 f0       	breq	.+22     	; 0x9c8 <vfprintf+0x354>
 9b2:	21 fd       	sbrc	r18, 1
 9b4:	02 c0       	rjmp	.+4      	; 0x9ba <vfprintf+0x346>
 9b6:	80 e2       	ldi	r24, 0x20	; 32
 9b8:	01 c0       	rjmp	.+2      	; 0x9bc <vfprintf+0x348>
 9ba:	8b e2       	ldi	r24, 0x2B	; 43
 9bc:	27 fd       	sbrc	r18, 7
 9be:	8d e2       	ldi	r24, 0x2D	; 45
 9c0:	b7 01       	movw	r22, r14
 9c2:	90 e0       	ldi	r25, 0x00	; 0
 9c4:	0e 94 45 05 	call	0xa8a	; 0xa8a <fputc>
 9c8:	a5 14       	cp	r10, r5
 9ca:	38 f4       	brcc	.+14     	; 0x9da <vfprintf+0x366>
 9cc:	b7 01       	movw	r22, r14
 9ce:	80 e3       	ldi	r24, 0x30	; 48
 9d0:	90 e0       	ldi	r25, 0x00	; 0
 9d2:	0e 94 45 05 	call	0xa8a	; 0xa8a <fputc>
 9d6:	5a 94       	dec	r5
 9d8:	f7 cf       	rjmp	.-18     	; 0x9c8 <vfprintf+0x354>
 9da:	aa 94       	dec	r10
 9dc:	f4 01       	movw	r30, r8
 9de:	ea 0d       	add	r30, r10
 9e0:	f1 1d       	adc	r31, r1
 9e2:	80 81       	ld	r24, Z
 9e4:	b7 01       	movw	r22, r14
 9e6:	90 e0       	ldi	r25, 0x00	; 0
 9e8:	0e 94 45 05 	call	0xa8a	; 0xa8a <fputc>
 9ec:	a1 10       	cpse	r10, r1
 9ee:	f5 cf       	rjmp	.-22     	; 0x9da <vfprintf+0x366>
 9f0:	33 20       	and	r3, r3
 9f2:	09 f4       	brne	.+2      	; 0x9f6 <vfprintf+0x382>
 9f4:	51 ce       	rjmp	.-862    	; 0x698 <vfprintf+0x24>
 9f6:	b7 01       	movw	r22, r14
 9f8:	80 e2       	ldi	r24, 0x20	; 32
 9fa:	90 e0       	ldi	r25, 0x00	; 0
 9fc:	0e 94 45 05 	call	0xa8a	; 0xa8a <fputc>
 a00:	3a 94       	dec	r3
 a02:	f6 cf       	rjmp	.-20     	; 0x9f0 <vfprintf+0x37c>
 a04:	f7 01       	movw	r30, r14
 a06:	86 81       	ldd	r24, Z+6	; 0x06
 a08:	97 81       	ldd	r25, Z+7	; 0x07
 a0a:	02 c0       	rjmp	.+4      	; 0xa10 <vfprintf+0x39c>
 a0c:	8f ef       	ldi	r24, 0xFF	; 255
 a0e:	9f ef       	ldi	r25, 0xFF	; 255
 a10:	2c 96       	adiw	r28, 0x0c	; 12
 a12:	e2 e1       	ldi	r30, 0x12	; 18
 a14:	0c 94 f1 05 	jmp	0xbe2	; 0xbe2 <__epilogue_restores__>

00000a18 <calloc>:
 a18:	0f 93       	push	r16
 a1a:	1f 93       	push	r17
 a1c:	cf 93       	push	r28
 a1e:	df 93       	push	r29
 a20:	86 9f       	mul	r24, r22
 a22:	80 01       	movw	r16, r0
 a24:	87 9f       	mul	r24, r23
 a26:	10 0d       	add	r17, r0
 a28:	96 9f       	mul	r25, r22
 a2a:	10 0d       	add	r17, r0
 a2c:	11 24       	eor	r1, r1
 a2e:	c8 01       	movw	r24, r16
 a30:	0e 94 b4 01 	call	0x368	; 0x368 <malloc>
 a34:	ec 01       	movw	r28, r24
 a36:	00 97       	sbiw	r24, 0x00	; 0
 a38:	29 f0       	breq	.+10     	; 0xa44 <calloc+0x2c>
 a3a:	a8 01       	movw	r20, r16
 a3c:	60 e0       	ldi	r22, 0x00	; 0
 a3e:	70 e0       	ldi	r23, 0x00	; 0
 a40:	0e 94 33 05 	call	0xa66	; 0xa66 <memset>
 a44:	ce 01       	movw	r24, r28
 a46:	df 91       	pop	r29
 a48:	cf 91       	pop	r28
 a4a:	1f 91       	pop	r17
 a4c:	0f 91       	pop	r16
 a4e:	08 95       	ret

00000a50 <strnlen_P>:
 a50:	fc 01       	movw	r30, r24
 a52:	05 90       	lpm	r0, Z+
 a54:	61 50       	subi	r22, 0x01	; 1
 a56:	70 40       	sbci	r23, 0x00	; 0
 a58:	01 10       	cpse	r0, r1
 a5a:	d8 f7       	brcc	.-10     	; 0xa52 <strnlen_P+0x2>
 a5c:	80 95       	com	r24
 a5e:	90 95       	com	r25
 a60:	8e 0f       	add	r24, r30
 a62:	9f 1f       	adc	r25, r31
 a64:	08 95       	ret

00000a66 <memset>:
 a66:	dc 01       	movw	r26, r24
 a68:	01 c0       	rjmp	.+2      	; 0xa6c <memset+0x6>
 a6a:	6d 93       	st	X+, r22
 a6c:	41 50       	subi	r20, 0x01	; 1
 a6e:	50 40       	sbci	r21, 0x00	; 0
 a70:	e0 f7       	brcc	.-8      	; 0xa6a <memset+0x4>
 a72:	08 95       	ret

00000a74 <strnlen>:
 a74:	fc 01       	movw	r30, r24
 a76:	61 50       	subi	r22, 0x01	; 1
 a78:	70 40       	sbci	r23, 0x00	; 0
 a7a:	01 90       	ld	r0, Z+
 a7c:	01 10       	cpse	r0, r1
 a7e:	d8 f7       	brcc	.-10     	; 0xa76 <strnlen+0x2>
 a80:	80 95       	com	r24
 a82:	90 95       	com	r25
 a84:	8e 0f       	add	r24, r30
 a86:	9f 1f       	adc	r25, r31
 a88:	08 95       	ret

00000a8a <fputc>:
 a8a:	0f 93       	push	r16
 a8c:	1f 93       	push	r17
 a8e:	cf 93       	push	r28
 a90:	df 93       	push	r29
 a92:	18 2f       	mov	r17, r24
 a94:	09 2f       	mov	r16, r25
 a96:	eb 01       	movw	r28, r22
 a98:	8b 81       	ldd	r24, Y+3	; 0x03
 a9a:	81 fd       	sbrc	r24, 1
 a9c:	03 c0       	rjmp	.+6      	; 0xaa4 <fputc+0x1a>
 a9e:	8f ef       	ldi	r24, 0xFF	; 255
 aa0:	9f ef       	ldi	r25, 0xFF	; 255
 aa2:	20 c0       	rjmp	.+64     	; 0xae4 <fputc+0x5a>
 aa4:	82 ff       	sbrs	r24, 2
 aa6:	10 c0       	rjmp	.+32     	; 0xac8 <fputc+0x3e>
 aa8:	4e 81       	ldd	r20, Y+6	; 0x06
 aaa:	5f 81       	ldd	r21, Y+7	; 0x07
 aac:	2c 81       	ldd	r18, Y+4	; 0x04
 aae:	3d 81       	ldd	r19, Y+5	; 0x05
 ab0:	42 17       	cp	r20, r18
 ab2:	53 07       	cpc	r21, r19
 ab4:	7c f4       	brge	.+30     	; 0xad4 <fputc+0x4a>
 ab6:	e8 81       	ld	r30, Y
 ab8:	f9 81       	ldd	r31, Y+1	; 0x01
 aba:	9f 01       	movw	r18, r30
 abc:	2f 5f       	subi	r18, 0xFF	; 255
 abe:	3f 4f       	sbci	r19, 0xFF	; 255
 ac0:	39 83       	std	Y+1, r19	; 0x01
 ac2:	28 83       	st	Y, r18
 ac4:	10 83       	st	Z, r17
 ac6:	06 c0       	rjmp	.+12     	; 0xad4 <fputc+0x4a>
 ac8:	e8 85       	ldd	r30, Y+8	; 0x08
 aca:	f9 85       	ldd	r31, Y+9	; 0x09
 acc:	81 2f       	mov	r24, r17
 ace:	09 95       	icall
 ad0:	89 2b       	or	r24, r25
 ad2:	29 f7       	brne	.-54     	; 0xa9e <fputc+0x14>
 ad4:	2e 81       	ldd	r18, Y+6	; 0x06
 ad6:	3f 81       	ldd	r19, Y+7	; 0x07
 ad8:	2f 5f       	subi	r18, 0xFF	; 255
 ada:	3f 4f       	sbci	r19, 0xFF	; 255
 adc:	3f 83       	std	Y+7, r19	; 0x07
 ade:	2e 83       	std	Y+6, r18	; 0x06
 ae0:	81 2f       	mov	r24, r17
 ae2:	90 2f       	mov	r25, r16
 ae4:	df 91       	pop	r29
 ae6:	cf 91       	pop	r28
 ae8:	1f 91       	pop	r17
 aea:	0f 91       	pop	r16
 aec:	08 95       	ret

00000aee <__ultoa_invert>:
 aee:	fa 01       	movw	r30, r20
 af0:	aa 27       	eor	r26, r26
 af2:	28 30       	cpi	r18, 0x08	; 8
 af4:	51 f1       	breq	.+84     	; 0xb4a <__ultoa_invert+0x5c>
 af6:	20 31       	cpi	r18, 0x10	; 16
 af8:	81 f1       	breq	.+96     	; 0xb5a <__ultoa_invert+0x6c>
 afa:	e8 94       	clt
 afc:	6f 93       	push	r22
 afe:	6e 7f       	andi	r22, 0xFE	; 254
 b00:	6e 5f       	subi	r22, 0xFE	; 254
 b02:	7f 4f       	sbci	r23, 0xFF	; 255
 b04:	8f 4f       	sbci	r24, 0xFF	; 255
 b06:	9f 4f       	sbci	r25, 0xFF	; 255
 b08:	af 4f       	sbci	r26, 0xFF	; 255
 b0a:	b1 e0       	ldi	r27, 0x01	; 1
 b0c:	3e d0       	rcall	.+124    	; 0xb8a <__ultoa_invert+0x9c>
 b0e:	b4 e0       	ldi	r27, 0x04	; 4
 b10:	3c d0       	rcall	.+120    	; 0xb8a <__ultoa_invert+0x9c>
 b12:	67 0f       	add	r22, r23
 b14:	78 1f       	adc	r23, r24
 b16:	89 1f       	adc	r24, r25
 b18:	9a 1f       	adc	r25, r26
 b1a:	a1 1d       	adc	r26, r1
 b1c:	68 0f       	add	r22, r24
 b1e:	79 1f       	adc	r23, r25
 b20:	8a 1f       	adc	r24, r26
 b22:	91 1d       	adc	r25, r1
 b24:	a1 1d       	adc	r26, r1
 b26:	6a 0f       	add	r22, r26
 b28:	71 1d       	adc	r23, r1
 b2a:	81 1d       	adc	r24, r1
 b2c:	91 1d       	adc	r25, r1
 b2e:	a1 1d       	adc	r26, r1
 b30:	20 d0       	rcall	.+64     	; 0xb72 <__ultoa_invert+0x84>
 b32:	09 f4       	brne	.+2      	; 0xb36 <__ultoa_invert+0x48>
 b34:	68 94       	set
 b36:	3f 91       	pop	r19
 b38:	2a e0       	ldi	r18, 0x0A	; 10
 b3a:	26 9f       	mul	r18, r22
 b3c:	11 24       	eor	r1, r1
 b3e:	30 19       	sub	r19, r0
 b40:	30 5d       	subi	r19, 0xD0	; 208
 b42:	31 93       	st	Z+, r19
 b44:	de f6       	brtc	.-74     	; 0xafc <__ultoa_invert+0xe>
 b46:	cf 01       	movw	r24, r30
 b48:	08 95       	ret
 b4a:	46 2f       	mov	r20, r22
 b4c:	47 70       	andi	r20, 0x07	; 7
 b4e:	40 5d       	subi	r20, 0xD0	; 208
 b50:	41 93       	st	Z+, r20
 b52:	b3 e0       	ldi	r27, 0x03	; 3
 b54:	0f d0       	rcall	.+30     	; 0xb74 <__ultoa_invert+0x86>
 b56:	c9 f7       	brne	.-14     	; 0xb4a <__ultoa_invert+0x5c>
 b58:	f6 cf       	rjmp	.-20     	; 0xb46 <__ultoa_invert+0x58>
 b5a:	46 2f       	mov	r20, r22
 b5c:	4f 70       	andi	r20, 0x0F	; 15
 b5e:	40 5d       	subi	r20, 0xD0	; 208
 b60:	4a 33       	cpi	r20, 0x3A	; 58
 b62:	18 f0       	brcs	.+6      	; 0xb6a <__ultoa_invert+0x7c>
 b64:	49 5d       	subi	r20, 0xD9	; 217
 b66:	31 fd       	sbrc	r19, 1
 b68:	40 52       	subi	r20, 0x20	; 32
 b6a:	41 93       	st	Z+, r20
 b6c:	02 d0       	rcall	.+4      	; 0xb72 <__ultoa_invert+0x84>
 b6e:	a9 f7       	brne	.-22     	; 0xb5a <__ultoa_invert+0x6c>
 b70:	ea cf       	rjmp	.-44     	; 0xb46 <__ultoa_invert+0x58>
 b72:	b4 e0       	ldi	r27, 0x04	; 4
 b74:	a6 95       	lsr	r26
 b76:	97 95       	ror	r25
 b78:	87 95       	ror	r24
 b7a:	77 95       	ror	r23
 b7c:	67 95       	ror	r22
 b7e:	ba 95       	dec	r27
 b80:	c9 f7       	brne	.-14     	; 0xb74 <__ultoa_invert+0x86>
 b82:	00 97       	sbiw	r24, 0x00	; 0
 b84:	61 05       	cpc	r22, r1
 b86:	71 05       	cpc	r23, r1
 b88:	08 95       	ret
 b8a:	9b 01       	movw	r18, r22
 b8c:	ac 01       	movw	r20, r24
 b8e:	0a 2e       	mov	r0, r26
 b90:	06 94       	lsr	r0
 b92:	57 95       	ror	r21
 b94:	47 95       	ror	r20
 b96:	37 95       	ror	r19
 b98:	27 95       	ror	r18
 b9a:	ba 95       	dec	r27
 b9c:	c9 f7       	brne	.-14     	; 0xb90 <__ultoa_invert+0xa2>
 b9e:	62 0f       	add	r22, r18
 ba0:	73 1f       	adc	r23, r19
 ba2:	84 1f       	adc	r24, r20
 ba4:	95 1f       	adc	r25, r21
 ba6:	a0 1d       	adc	r26, r0
 ba8:	08 95       	ret

00000baa <__prologue_saves__>:
 baa:	2f 92       	push	r2
 bac:	3f 92       	push	r3
 bae:	4f 92       	push	r4
 bb0:	5f 92       	push	r5
 bb2:	6f 92       	push	r6
 bb4:	7f 92       	push	r7
 bb6:	8f 92       	push	r8
 bb8:	9f 92       	push	r9
 bba:	af 92       	push	r10
 bbc:	bf 92       	push	r11
 bbe:	cf 92       	push	r12
 bc0:	df 92       	push	r13
 bc2:	ef 92       	push	r14
 bc4:	ff 92       	push	r15
 bc6:	0f 93       	push	r16
 bc8:	1f 93       	push	r17
 bca:	cf 93       	push	r28
 bcc:	df 93       	push	r29
 bce:	cd b7       	in	r28, 0x3d	; 61
 bd0:	de b7       	in	r29, 0x3e	; 62
 bd2:	ca 1b       	sub	r28, r26
 bd4:	db 0b       	sbc	r29, r27
 bd6:	0f b6       	in	r0, 0x3f	; 63
 bd8:	f8 94       	cli
 bda:	de bf       	out	0x3e, r29	; 62
 bdc:	0f be       	out	0x3f, r0	; 63
 bde:	cd bf       	out	0x3d, r28	; 61
 be0:	09 94       	ijmp

00000be2 <__epilogue_restores__>:
 be2:	2a 88       	ldd	r2, Y+18	; 0x12
 be4:	39 88       	ldd	r3, Y+17	; 0x11
 be6:	48 88       	ldd	r4, Y+16	; 0x10
 be8:	5f 84       	ldd	r5, Y+15	; 0x0f
 bea:	6e 84       	ldd	r6, Y+14	; 0x0e
 bec:	7d 84       	ldd	r7, Y+13	; 0x0d
 bee:	8c 84       	ldd	r8, Y+12	; 0x0c
 bf0:	9b 84       	ldd	r9, Y+11	; 0x0b
 bf2:	aa 84       	ldd	r10, Y+10	; 0x0a
 bf4:	b9 84       	ldd	r11, Y+9	; 0x09
 bf6:	c8 84       	ldd	r12, Y+8	; 0x08
 bf8:	df 80       	ldd	r13, Y+7	; 0x07
 bfa:	ee 80       	ldd	r14, Y+6	; 0x06
 bfc:	fd 80       	ldd	r15, Y+5	; 0x05
 bfe:	0c 81       	ldd	r16, Y+4	; 0x04
 c00:	1b 81       	ldd	r17, Y+3	; 0x03
 c02:	aa 81       	ldd	r26, Y+2	; 0x02
 c04:	b9 81       	ldd	r27, Y+1	; 0x01
 c06:	ce 0f       	add	r28, r30
 c08:	d1 1d       	adc	r29, r1
 c0a:	0f b6       	in	r0, 0x3f	; 63
 c0c:	f8 94       	cli
 c0e:	de bf       	out	0x3e, r29	; 62
 c10:	0f be       	out	0x3f, r0	; 63
 c12:	cd bf       	out	0x3d, r28	; 61
 c14:	ed 01       	movw	r28, r26
 c16:	08 95       	ret

00000c18 <_exit>:
 c18:	f8 94       	cli

00000c1a <__stop_program>:
 c1a:	ff cf       	rjmp	.-2      	; 0xc1a <__stop_program>
